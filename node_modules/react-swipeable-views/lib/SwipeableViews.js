Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();exports.




































































































getDomTreeShapes=getDomTreeShapes;exports.

































findNativeHandler=findNativeHandler;var _react=require('react');var _react2=_interopRequireDefault(_react);var _Motion=require('react-motion/lib/Motion');var _Motion2=_interopRequireDefault(_Motion);var _spring=require('react-motion/lib/spring');var _spring2=_interopRequireDefault(_spring);var _warning=require('warning');var _warning2=_interopRequireDefault(_warning);var _reactSwipeableViewsCore=require('react-swipeable-views-core');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var styles={container:{display:'flex',willChange:'transform'},slide:{width:'100%',flexShrink:0,overflow:'auto'}};var axisProperties={root:{x:{overflowX:'hidden'},'x-reverse':{overflowX:'hidden'},y:{overflowY:'hidden'},'y-reverse':{overflowY:'hidden'}},flexDirection:{x:'row','x-reverse':'row-reverse',y:'column','y-reverse':'column-reverse'},transform:{x:function x(translate){return'translate('+-translate+'%, 0)';},'x-reverse':function xReverse(translate){return'translate('+translate+'%, 0)';},y:function y(translate){return'translate(0, '+-translate+'%)';},'y-reverse':function yReverse(translate){return'translate(0, '+translate+'%)';}},length:{x:'width','x-reverse':'width',y:'height','y-reverse':'height'},rotationMatrix:{x:{x:[1,0],y:[0,1]},'x-reverse':{x:[-1,0],y:[0,1]},y:{x:[0,1],y:[1,0]},'y-reverse':{x:[0,-1],y:[1,0]}},scrollPosition:{x:'scrollLeft','x-reverse':'scrollLeft',y:'scrollTop','y-reverse':'scrollTop'},scrollLength:{x:'scrollWidth','x-reverse':'scrollWidth',y:'scrollHeight','y-reverse':'scrollHeight'},clientLength:{x:'clientWidth','x-reverse':'clientWidth',y:'clientHeight','y-reverse':'clientHeight'}};function applyRotationMatrix(touch,axis){var rotationMatrix=axisProperties.rotationMatrix[axis];return{pageX:rotationMatrix.x[0]*touch.pageX+rotationMatrix.x[1]*touch.pageY,pageY:rotationMatrix.y[0]*touch.pageX+rotationMatrix.y[1]*touch.pageY};}function getDomTreeShapes(element,rootNode){var domTreeShapes=[];while(element&&element!==rootNode){if(element.getAttribute('role')==='option'){break;}if(element.clientWidth>0&&element.scrollWidth>element.clientWidth){domTreeShapes.push({element:element,scrollWidth:element.scrollWidth,scrollHeight:element.scrollHeight,clientWidth:element.clientWidth,clientHeight:element.clientHeight,scrollLeft:element.scrollLeft,scrollTop:element.scrollTop});}element=element.parentNode;}return domTreeShapes;}var nodeHowClaimedTheScroll=null;function findNativeHandler(params){var

domTreeShapes=



params.domTreeShapes,indexCurrent=params.indexCurrent,index=params.index,axis=params.axis;

return domTreeShapes.some(function(shape){

var goingForward=index<=indexCurrent;
if(axis==='x'||axis==='y'){
goingForward=!goingForward;
}

var scrollPosition=shape[axisProperties.scrollPosition[axis]];

var areNotAtStart=scrollPosition>0;
var areNotAtEnd=scrollPosition+
shape[axisProperties.clientLength[axis]]<shape[axisProperties.scrollLength[axis]];

if(
goingForward&&areNotAtEnd||
!goingForward&&areNotAtStart)
{
nodeHowClaimedTheScroll=shape.element;
return true;
}

return false;
});
}var

SwipeableViews=function(_Component){_inherits(SwipeableViews,_Component);function SwipeableViews(){var _ref;var _temp,_this,_ret;_classCallCheck(this,SwipeableViews);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=SwipeableViews.__proto__||Object.getPrototypeOf(SwipeableViews)).call.apply(_ref,[this].concat(args))),_this),_this.



























































































































state={},_this.










































viewLength=0,_this.
startX=0,_this.
lastX=0,_this.
vx=0,_this.
startY=0,_this.
isSwiping=undefined,_this.
started=false,_this.





indexAnimation=0,_this.

handleTouchStart=function(event){var _this$props=



_this.props,axis=_this$props.axis,onTouchStart=_this$props.onTouchStart;

if(onTouchStart){
onTouchStart(event);
}

var touch=applyRotationMatrix(event.touches[0],axis);

_this.viewLength=_this.node.getBoundingClientRect()[axisProperties.length[axis]];
_this.startX=touch.pageX;
_this.lastX=touch.pageX;
_this.vx=0;
_this.startY=touch.pageY;
_this.isSwiping=undefined;
_this.started=true;
_this.startIndex=_this.indexAnimation/100;
},_this.

handleTouchMove=function(event){
if(_this.props.onTouchMove){
_this.props.onTouchMove(event);
}



if(!_this.started){
_this.handleTouchStart(event);
return;
}


if(nodeHowClaimedTheScroll!==null&&nodeHowClaimedTheScroll!==_this.node){
return;
}var _this$props2=






_this.props,axis=_this$props2.axis,children=_this$props2.children,onSwitching=_this$props2.onSwitching,resistance=_this$props2.resistance;

var touch=applyRotationMatrix(event.touches[0],axis);


if(_this.isSwiping===undefined){
var dx=Math.abs(_this.startX-touch.pageX);
var dy=Math.abs(_this.startY-touch.pageY);

var isSwiping=dx>dy&&dx>_reactSwipeableViewsCore.constant.UNCERTAINTY_THRESHOLD;


if(dx>dy){
event.preventDefault();
}

if(isSwiping===true||dy>_reactSwipeableViewsCore.constant.UNCERTAINTY_THRESHOLD){
_this.isSwiping=isSwiping;
_this.startX=touch.pageX;

return;
}
}

if(_this.isSwiping!==true){
return;
}


event.preventDefault();


_this.vx=_this.vx*0.5+(touch.pageX-_this.lastX)*0.5;
_this.lastX=touch.pageX;var _computeIndex=




(0,_reactSwipeableViewsCore.computeIndex)({
children:children,
resistance:resistance,
pageX:touch.pageX,
startIndex:_this.startIndex,
startX:_this.startX,
viewLength:_this.viewLength}),index=_computeIndex.index,startX=_computeIndex.startX;



if(nodeHowClaimedTheScroll===null){
var domTreeShapes=getDomTreeShapes(event.target,_this.node);
var hasFoundNativeHandler=findNativeHandler({
domTreeShapes:domTreeShapes,
indexCurrent:_this.state.indexCurrent,
index:index,
axis:axis});



if(hasFoundNativeHandler){
return;
}
}


if(startX){
_this.startX=startX;
}else if(nodeHowClaimedTheScroll===null){
nodeHowClaimedTheScroll=_this.node;
}

_this.setState({
displaySameSlide:false,
isDragging:true,
indexCurrent:index},
function(){
if(onSwitching){
onSwitching(index,'move');
}
});
},_this.

handleTouchEnd=function(event){
if(_this.props.onTouchEnd){
_this.props.onTouchEnd(event);
}

nodeHowClaimedTheScroll=null;



if(!_this.started){
return;
}

_this.started=false;

if(_this.isSwiping!==true){
return;
}

var indexLatest=_this.state.indexLatest;
var indexCurrent=_this.state.indexCurrent;
var delta=indexLatest-indexCurrent;

var indexNew=void 0;


if(Math.abs(_this.vx)>_this.props.threshold){
if(_this.vx>0){
indexNew=Math.floor(indexCurrent);
}else{
indexNew=Math.ceil(indexCurrent);
}
}else if(Math.abs(delta)>_this.props.hysteresis){

indexNew=delta>0?Math.floor(indexCurrent):Math.ceil(indexCurrent);
}else{
indexNew=indexLatest;
}

var indexMax=_react.Children.count(_this.props.children)-1;

if(indexNew<0){
indexNew=0;
}else if(indexNew>indexMax){
indexNew=indexMax;
}

_this.setState({
indexCurrent:indexNew,
indexLatest:indexNew,
isDragging:false},
function(){
if(_this.props.onSwitching){
_this.props.onSwitching(indexNew,'end');
}

if(_this.props.onChangeIndex&&indexNew!==indexLatest){
_this.props.onChangeIndex(indexNew,indexLatest);
}


if(indexCurrent===indexLatest){
_this.handleRest();
}
});
},_this.

handleRest=function(){

if(_this.state.displaySameSlide){
return;
}



if(_this.props.onTransitionEnd&&!_this.state.isDragging){
_this.props.onTransitionEnd();
}
},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(SwipeableViews,[{key:'componentWillMount',value:function componentWillMount(){if(process.env.NODE_ENV!=='production'){(0,_reactSwipeableViewsCore.checkIndexBounds)(this.props);}this.setState({indexCurrent:this.props.index,indexLatest:this.props.index,isDragging:false,isFirstRender:true,heightLatest:0});}},{key:'componentDidMount',value:function componentDidMount(){this.setState({isFirstRender:false});}},{key:'componentWillReceiveProps',value:function componentWillReceiveProps(nextProps){var index=nextProps.index;if(typeof index==='number'&&index!==this.props.index){if(process.env.NODE_ENV!=='production'){(0,_reactSwipeableViewsCore.checkIndexBounds)(nextProps);}this.setState({displaySameSlide:(0,_reactSwipeableViewsCore.getDisplaySameSlide)(this.props,nextProps),indexCurrent:index,indexLatest:index});}}},{key:'updateHeight',value:function updateHeight(

node){
if(node!==null){
var child=node.children[0];
if(child!==undefined&&child.offsetHeight!==undefined&&
this.state.heightLatest!==child.offsetHeight){
this.setState({
heightLatest:child.offsetHeight});

}
}
}},{key:'renderContainer',value:function renderContainer(

interpolatedStyle,animateHeight,childrenToRender){var _props=



this.props,axis=_props.axis,containerStyle=_props.containerStyle;

this.indexAnimation=interpolatedStyle.translate;

var transform=axisProperties.transform[axis](interpolatedStyle.translate);
var styleNew={
WebkitTransform:transform,
transform:transform,
height:null,
flexDirection:axisProperties.flexDirection[axis]};


if(animateHeight){
styleNew.height=interpolatedStyle.height;
}

return(
_react2.default.createElement('div',{style:_extends({},styleNew,styles.container,containerStyle)},
childrenToRender));


}},{key:'render',value:function render()

{var _this2=this;var _props2=



















this.props,animateHeight=_props2.animateHeight,animateTransitions=_props2.animateTransitions,axis=_props2.axis,children=_props2.children,containerStyle=_props2.containerStyle,disabled=_props2.disabled,hysteresis=_props2.hysteresis,index=_props2.index,onChangeIndex=_props2.onChangeIndex,onSwitching=_props2.onSwitching,onTransitionEnd=_props2.onTransitionEnd,resistance=_props2.resistance,slideStyle=_props2.slideStyle,slideClassName=_props2.slideClassName,springConfig=_props2.springConfig,style=_props2.style,threshold=_props2.threshold,other=_objectWithoutProperties(_props2,['animateHeight','animateTransitions','axis','children','containerStyle','disabled','hysteresis','index','onChangeIndex','onSwitching','onTransitionEnd','resistance','slideStyle','slideClassName','springConfig','style','threshold']);var _state=







this.state,displaySameSlide=_state.displaySameSlide,heightLatest=_state.heightLatest,indexCurrent=_state.indexCurrent,isDragging=_state.isDragging,isFirstRender=_state.isFirstRender;

var translate=indexCurrent*100;
var height=heightLatest;

var motionStyle=isDragging||!animateTransitions||displaySameSlide?{
translate:translate,
height:height}:
{
translate:(0,_spring2.default)(translate,_extends({

precision:1.5},
springConfig)),

height:height!==0?(0,_spring2.default)(height,_extends({

precision:1.5},
springConfig)):
0};


var touchEvents=disabled?{}:{
onTouchStart:this.handleTouchStart,
onTouchMove:this.handleTouchMove,
onTouchEnd:this.handleTouchEnd};



(0,_warning2.default)(
!animateHeight||
!containerStyle||
!containerStyle.height&&!containerStyle.maxHeight&&!containerStyle.minHeight,'react-swipeable-view: You are setting animateHeight to true but you are also providing a custom height.\n      The custom height has a higher priority than the animateHeight property.\n      So animateHeight is most likely having no effect at all.');





var slideStyleObj=_extends({},styles.slide,slideStyle);

var childrenToRender=_react.Children.map(children,function(child,indexChild){
if(isFirstRender&&indexChild>0){
return null;
}

var ref=void 0;
var hidden=true;

if(indexChild===_this2.state.indexLatest){
hidden=false;

if(animateHeight){
ref=function ref(node){return _this2.updateHeight(node);};
slideStyleObj.overflowY='hidden';
}
}

return(
_react2.default.createElement('div',{
ref:ref,
style:slideStyleObj,
className:slideClassName,
'aria-hidden':hidden,
role:'option'},

child));


});

return(
_react2.default.createElement('div',_extends({
ref:function ref(node){_this2.node=node;},
style:_extends({},axisProperties.root[axis],style),
role:'listbox'},
other,
touchEvents),

_react2.default.createElement(_Motion2.default,{style:motionStyle,onRest:this.handleRest},
function(interpolatedStyle){return _this2.renderContainer(interpolatedStyle,animateHeight,childrenToRender);})));



}}]);return SwipeableViews;}(_react.Component);SwipeableViews.displayName='ReactSwipableView';SwipeableViews.propTypes={animateHeight:_react.PropTypes.bool,animateTransitions:_react.PropTypes.bool,axis:_react.PropTypes.oneOf(['x','x-reverse','y','y-reverse']),children:_react.PropTypes.node.isRequired,containerStyle:_react.PropTypes.object,disabled:_react.PropTypes.bool,hysteresis:_react.PropTypes.number,index:_react.PropTypes.number,onChangeIndex:_react.PropTypes.func,onSwitching:_react.PropTypes.func,onTouchEnd:_react.PropTypes.func,onTouchMove:_react.PropTypes.func,onTouchStart:_react.PropTypes.func,onTransitionEnd:_react.PropTypes.func,resistance:_react.PropTypes.bool,slideClassName:_react.PropTypes.string,slideStyle:_react.PropTypes.object,springConfig:_react.PropTypes.object,style:_react.PropTypes.object,threshold:_react.PropTypes.number};SwipeableViews.defaultProps={animateHeight:false,animateTransitions:true,axis:'x',disabled:false,hysteresis:0.6,index:0,threshold:5,resistance:false,springConfig:{stiffness:300,damping:30}};exports.default=


SwipeableViews;